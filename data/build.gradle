plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion buildConfigs.compileSdk
    buildToolsVersion buildConfigs.buildTools

    defaultConfig {
        minSdkVersion buildConfigs.minSdk
        targetSdkVersion buildConfigs.targetSdk
        versionCode 1
        versionName "1.0"

        buildConfigField 'String', 'API_KEY', "${getProperty("local.properties", "api_key")}"
        buildConfigField 'String', 'BASE_URL', '"https://api.themoviedb.org/3/"'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    lintOptions {
        abortOnError false
    }
}

def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename)
        }
    } else {
        print(filename + " does not exist!")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':domain')
    implementation project(path: ':model')

    implementation buildDependencies.kotlinStdlib
    implementation buildDependencies.coreKtx
    implementation buildDependencies.appcompat

    implementation buildDependencies.retrofit
    implementation buildDependencies.moshiConverter

    implementation buildDependencies.coroutinesCore

    implementation buildDependencies.hilt
    kapt buildDependencies.hiltKapt

    kapt buildDependencies.hiltAndroidxKapt

    implementation buildDependencies.room
    implementation buildDependencies.roomRuntime
    kapt buildDependencies.roomKapt

    debugImplementation debugBuildDependencies.flipper
    debugImplementation debugBuildDependencies.flipperNetwork
    debugImplementation debugBuildDependencies.soloader

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
